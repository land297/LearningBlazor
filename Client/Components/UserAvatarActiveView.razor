@using Learning.Shared.DbModels
@inject Learning.Client.Services.IUserAvatarLocalService UserAvatarLocal

<MudText Typo="Typo.caption">@AvatarName</MudText>
@if (UserAvatar != null) {
    <img src="@UserAvatar.CoverImage" class="width:100%;" />
    <MudText Typo="Typo.caption">@UserAvatar.Name</MudText>
}


@code {
    [Parameter]
    public UserAvatar UserAvatar { get; set; }

    string AvatarName { get { return UserAvatar == null ? "xxx" : UserAvatar.Name; } }

    protected override async Task OnInitializedAsync() {
        UserAvatarLocal.UserAvatarChanged += ActiveUserAvatarChange;
        ActiveUserAvatarChange(null);
        await Task.Delay(0);
    }
    async void ActiveUserAvatarChange(UserAvatar userAvatar) {
        Console.WriteLine("!! UserAvatarActiveView - ActiveUserAvatarChange");
        if (userAvatar == null) {
            UserAvatar = await UserAvatarLocal.Get(false);
        } else {
            UserAvatar = userAvatar;
        }

        StateHasChanged();
    }
}
