@using Learning.Shared.DbModels
@inject NavigationManager NavigationManager

<MudGrid>
    <MudItem xs="12" sm="6">
        <MudPaper Elevation="3" Class="pa-2 mx-2">
            <MudText Typo="Typo.h6">User Avatar</MudText>
            <MudText Typo="Typo.body1">@UserAvatar.Name</MudText>
            <MudText Typo="Typo.body1">@UserAvatar.Description</MudText>
            @if (!string.IsNullOrWhiteSpace(UserAvatar.CoverImage)) {
                <div>
                    <img src="@UserAvatar.CoverImage" class="width:100%;" />

                </div>
            }

        </MudPaper>
        @if (UserAvatar.CompletedSlideDeckPrograms != null) {
            @foreach (var cslp in UserAvatar.CompletedSlideDeckPrograms) {
    <MudContainer Class="pa-2 mx-2">
        <MudText Typo="Typo.body1">@cslp.SlideDeckProgram.Title</MudText>
        <MudText Typo="Typo.body1">@cslp.Comment</MudText>
        <MudText Typo="Typo.body1">@cslp.CompletedOn</MudText>
        <MudText Typo="Typo.body2">@cslp.IsPublic</MudText>
        <MudRating ReadOnly="true" SelectedValue=@cslp.UserAvatarFeedback ></MudRating>
        <MudButton OnClick="@(() => NavigationManager.NavigateTo($"sharedCompletedProgram/{cslp.Id}"))">Share</MudButton>
    </MudContainer>

            }
        }
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public UserAvatar UserAvatar { get; set; }
}
