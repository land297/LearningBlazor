@page "/addSlideDeck"
@using Learning.Shared.DbModels
@using Syncfusion.Blazor.RichTextEditor
@inject Learning.Client.Services.IVideoService VideoService
@inject IJSRuntime JSRuntime

<MudGrid>
    <MudItem xs="12" sm="6">
        <MudPaper Elevation="3">
            <MudText Typo="Typo.h6">SlideDeck</MudText>
            <MudTextField @bind-Value="SlideDeck.Title" Label="Title" Variant="Variant.Text"></MudTextField>
            <MudTextField @bind-Value="SlideDeck.Description" Label="Description" Variant="Variant.Text" Lines="5"></MudTextField>
        </MudPaper>
        <MudPaper Elevation="3">
            <MudText Typo="Typo.h6">New Slide</MudText>
            <MudText Typo="Typo.subtitle1">Description</MudText>
            <SfRichTextEditor @bind-Value="SlideTextValue">
                <RichTextEditorToolbarSettings Items="@Tools" Type="ToolbarType.MultiRow" />
            </SfRichTextEditor>
            <MudSelect T="string" Label="Video" ValueChanged="SelectedVideo">
                @if (Videos != null) {
                    foreach (var video in Videos) {
                        <MudSelectItem Value="@(video.DisplayName)" />
                    }
                }
            </MudSelect>
            @if (!string.IsNullOrWhiteSpace(SlideVideoUrlValue)) {
                <BlazoredVideo @ref="MyBlazorVideo" class="w-100"
                               style="max-width:400px;"
                               controls="controls"
                               
                               >
                    <source src="@SlideVideoUrlValue" type="video/mp4" />
                </BlazoredVideo>
            }
            <MudFab Color="Color.Secondary" Icon="@Icons.Material.Add" Size="Size.Small" OnClick="AddSlide" />
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private SlideDeck SlideDeck = new SlideDeck();
    private string SlideTextValue = string.Empty;
    private string SlideVideoUrlValue = string.Empty;
    private List<Media> Videos;

    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
{
        new ToolbarItemModel() { Command = ToolbarCommand.Bold },
        new ToolbarItemModel() { Command = ToolbarCommand.Italic },
        new ToolbarItemModel() { Command = ToolbarCommand.Underline },
        new ToolbarItemModel() { Command = ToolbarCommand.StrikeThrough },

        new ToolbarItemModel() { Command = ToolbarCommand.FontSize },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.FontColor },
        new ToolbarItemModel() { Command = ToolbarCommand.BackgroundColor },
    };

    BlazoredVideo MyBlazorVideo;
    protected override async Task OnInitializedAsync() {
        var r = await VideoService.GetVideos();
        if (r.Success) {
            Videos = r.Data;
        } else {
            //dispaly toast
        }


        await Task.Delay(100);
    }
    public async void AddSlide(MouseEventArgs e) {
        //Exercise.ContentSlides.Add(new ContentSlide() { TextContent = Value, ImageContent = ImageContent, VideoUrlContent = VideoContent });
    }
    public async void Save() {
        //await ContentService.SaveExercise(Exercise);
    }
    public void SelectedVideo(string value) {
        var video = Videos.FirstOrDefault(v => v.DisplayName == value);
        SlideVideoUrlValue = video.FullFileName;
        //MyBlazorVideo.StalledReloadControl();
        //MyBlazorVideo.ReloadControl();
        //await JSRuntime.InvokeVoidAsync("Blazored.invoke", "MyBlazorVideo", "pause");
       
       
        // TODO : chaning video after first selection doesn't work. waiting for update on library

    }

}
