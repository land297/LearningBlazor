@page "/admin/addSlideDeck"
@using Learning.Shared.DbModels

@inject Learning.Client.Services.IVideoService VideoService
@inject Learning.Client.Services.ISlideDeckService SlideDeckService
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

<Learning.Client.Components.EditSlideDeck SlideDeck="SlideDeck" Videos="Videos" Images="Images"></Learning.Client.Components.EditSlideDeck>

@code {
    //TODO: refactor with editSlideDeckPage 
    private SlideDeck SlideDeck = new SlideDeck();
    private List<Media> Videos;
    private List<Media> Images;

    protected override async Task OnInitializedAsync() {
        var r = await VideoService.GetVideos();
        if (r.Success) {
            Videos = r.Data;
        } else {
            //dispaly toast
        }
        r = await VideoService.GetImages();
        if (r.Success) {
            Images = r.Data;
        } else {
            Snackbar.Add($"Could not load Images source. Error: {r.Message}", Severity.Error);
        }
        await Task.Delay(100);
    }

}
