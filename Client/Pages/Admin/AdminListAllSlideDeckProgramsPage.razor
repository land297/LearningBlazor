@page "/admin/adminlistAllSlideDeckProgramsPage"
@inject Learning.Client.Services.ISlideDeckService SlideDeckService
@inject Learning.Client.Services.ISlideDeckProgramService SlideDeckProgramService
@inject Learning.Client.Services.IAuthService Auth
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@using Learning.Shared.DbModels


<AuthorizeView Roles="Admin,ContentCreator">
    <Authorized>
        @if (SlideDeckProgramsAll != null) {
            <MudTable Items="@SlideDeckProgramsAll" Hover="true" Breakpoint="Breakpoint.Sm">
                <HeaderContent>
                    <MudTh>Title</MudTh>
                    <MudTh>Description</MudTh>
                    <MudTh>Page count</MudTh>
                    <MudTh>AccessLevel</MudTh>
                    <MudTh>Is published</MudTh>
                </HeaderContent>
                <RowTemplate Context="deck">
                    <MudTd>@deck.Title</MudTd>
                    <MudTd>@deck.Description</MudTd>
                    <MudTd>@deck.Entries.Count</MudTd>
                    <MudTd>@deck.AccessLevel</MudTd>
                    <MudTd>@deck.IsPublished</MudTd>
                    <MudTd><MudButton OnClick="@(() => NavigationManager.NavigateTo($"viewSlideDeckProgram/{deck.Id}"))">View</MudButton></MudTd>
                    <MudTd><MudButton OnClick="@(() => NavigationManager.NavigateTo($"admin/editSlideDeckProgram/{deck.Id}"))">Edit</MudButton></MudTd>

                </RowTemplate>
            </MudTable>
        }
        <MudDivider Class="mb-8" />
    </Authorized>
</AuthorizeView>

@code {
    List<SlideDeckProgram> SlideDeckProgramsAll;
    protected override async Task OnInitializedAsync() {
        if (await Auth.IsContentCreator() || await Auth.IsAdmin()) {
            var r = await SlideDeckProgramService.GetAsContentCreator();
            if (r.Success) {
                SlideDeckProgramsAll = r.Data;
            } else {
                Snackbar.Add($"Could not get as content creator. Error: {r.Message}", Severity.Error);
            }
        }
    }
}