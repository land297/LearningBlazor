@page "/CompletedReviewableProgramViewPage/{CompletedSlideDeckProgramId:int}/{UserAvatarId:int}/{CompletedProgramReviewable:int}"
@using Learning.Shared.DbModels
@inject Learning.Client.Services.IUserAvatarService UserAvatars
@inject Learning.Client.Services.ICompletedSlideDeckProgramService CompletedPrograms
@inject Learning.Client.Services.ICompletedReviewableProgramServices completedReviewablePrograms

@inject ISnackbar Snackbar

<h3>CompletedReviewableProgramViewPage</h3>
@if (!loading) {
    <MudText Typo="Typo.body2">@unreviewed.CompletedSlideDeckProgram.Comment</MudText>
    @foreach (var item in unreviewed.Content) {
        <MudText Typo="Typo.body1">@item.Name</MudText>
        if (item.Mime.Contains("video")) {
            <BlazoredVideo @ref="MyBlazorVideo" class="w-100 m-2"
                           style="max-width:400px;"
                           controls="controls">
                <source src="@item.Uri" type="video/mp4" />
            </BlazoredVideo>
        } else if (item.Mime.Contains("image")) {
            <div>
                <img src="@item.Uri" class="width:100%;" />
            </div>
        } else {
            <MudText Typo="Typo.body1">Nothing...</MudText>    
        }
    }
}
@code {
    [Parameter]
    public int CompletedSlideDeckProgramId { get; set; }
    [Parameter]
    public int UserAvatarId { get; set; }
    [Parameter]
    public int CompletedProgramReviewable { get; set; }

    CompletedProgramReviewable unreviewed;
    bool loading = true;
    BlazoredVideo MyBlazorVideo;

    protected override async Task OnInitializedAsync() {
        var r = await completedReviewablePrograms.GetUnreviewd(CompletedProgramReviewable);
        if (r.Success) {
            unreviewed = r.Data;
        } else {
            Snackbar.Add($"Could not get CompletedProgramReviewable. Error: {r.Message}", Severity.Error);
        }

        //var ur = await UserAvatars.Get(UserAvatarId);
        //if (ur.Success) {
        //    unreviewed.UserAvatar = ur.Data;
        //} else {
        //    Snackbar.Add($"Could not get userAvatar. Error: {r.Message}", Severity.Error);
        //}

        var cr = await CompletedPrograms.Get(UserAvatarId);
        if (cr.Success) {
            unreviewed.CompletedSlideDeckProgram = cr.Data;
            unreviewed.UserAvatar = cr.Data.UserAvatar;
        } else {
            Snackbar.Add($"Could not get userAvatar. Error: {r.Message}", Severity.Error);
        }
        loading = false;
    }
}
