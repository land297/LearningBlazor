@page "/"
@inject Learning.Client.Services.IAuthService Auth
@inject HttpClient _http

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<Learning.Client.Components.Login />

<MudButton OnClick="LogOut">Log out</MudButton>

<InputFile id="fileInput" OnChange="SetCoverImage" hidden multiple />
<MudFab HtmlTag="label"
        Color="Color.Secondary"
        Icon="@Icons.Material.Filled.Image"
        Label="Load Cover Image"
        for="fileInput" />

@code {

    async Task LogOut() {

        var response = await Auth.Logout();


    }

    private async Task SetCoverImage(InputFileChangeEventArgs e) {
        var maxAllowedFiles = 1;
        //var format = "image/png";

        foreach (var imageFile in e.GetMultipleFiles(maxAllowedFiles)) {
            //var resizedFile = await imageFile.RequestImageFileAsync(format,
            //    100, 100);
            //await OnSubmit(imageFile);
            //var buffer = new byte[imageFile.Size];
            //await imageFile.OpenReadStream().ReadAsync(buffer);

            //var response = await _http.PostAsync("api/upload/",new StreamContent(resizedFile.OpenReadStream()));

            using (var ms = imageFile.OpenReadStream(imageFile.Size)) {
                var content = new MultipartFormDataContent();
                content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("form-data");
                content.Headers.Add("ProgramId", "2");
                //content.Headers.Add("UserAvatarId", "2");

                content.Add(new StreamContent(ms, Convert.ToInt32(imageFile.Size)), imageFile.ContentType, imageFile.Name);
                content.Add(new StreamContent(ms, Convert.ToInt32(imageFile.Size)), imageFile.ContentType, imageFile.Name);
                content.Add(new StreamContent(ms, Convert.ToInt32(imageFile.Size)), imageFile.ContentType, imageFile.Name);
                content.Add(new StreamContent(ms, Convert.ToInt32(imageFile.Size)), imageFile.ContentType, imageFile.Name);

                var response = await _http.PostAsync("api/upload", content);

                Console.WriteLine(response.IsSuccessStatusCode);
                Console.WriteLine(response.StatusCode);
                Console.WriteLine("trolololol");

            }
        }
    }
}
