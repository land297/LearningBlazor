@page "/listAllSlideDecksPage"
@inject Learning.Client.Services.ISlideDeckService SlideDeckService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@using Learning.Shared.DbModels


@if (SlideDecksPublished != null) {

    <MudContainer MaxWidth="MaxWidth.Medium">
        @foreach (var slidedeck in SlideDecksPublished) {
            @*<MudItem xs="10" sm="6">*@
            <MudPaper Elevation="3" Class="pa-2 mb-4">
                <MudText Typo="Typo.h6">@slidedeck.Title</MudText>
                @if (!string.IsNullOrWhiteSpace(slidedeck.CoverImage)) {
                    <div>
                        <img src="@slidedeck.CoverImage" class="width:100%;" />

                    </div>
                }
                <MudText Typo="Typo.body1">@slidedeck.Description</MudText>
                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@(() => NavigationManager.NavigateTo($"viewSlideDeck/{slidedeck.Id}"))">Learn More</MudButton>
            </MudPaper>
            @*</MudItem>*@
        }
        @*<MudItem xs="1" sm="3"></MudItem>*@
        @*</MudGrid>*@
    </MudContainer>
} else {
<MudContainer MaxWidth="MaxWidth.Medium">
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" />
    <MudDivider Class="mb-8" />
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" />
    <MudDivider Class="mb-8" />
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" />
</MudContainer>
}
        @code {
            List<SlideDeck> SlideDecksPublished;
            List<SlideDeck> SlideDecksAll;

    protected override async Task OnInitializedAsync() {
            var r = await SlideDeckService.GetPublished();
            if (r.Success) {
                SlideDecksPublished = r.Data;
            } else {
                Snackbar.Add($"Could not get publushed. Error: {r.Message}", Severity.Error);
            }

            r = await SlideDeckService.GetAsContentCreator();
            if (r.Success) {
                SlideDecksAll = r.Data;
            } else {
                Snackbar.Add($"Could not get as content creator. Error: {r.Message}", Severity.Error);
            }
        }
        }
